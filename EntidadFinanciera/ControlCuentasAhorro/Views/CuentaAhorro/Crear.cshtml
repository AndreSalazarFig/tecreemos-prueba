@model CuentaAhorroVM
@{
    ViewData["Title"] = "Crear cuenta";
}

<h3>@ViewData["Title"] - @($"{Model.Cliente.Nombre ?? ""} {Model.Cliente.ApellidoPaterno ?? ""} {Model.Cliente.ApellidoMaterno ?? ""}".Trim())</h3>

<div class="alert alert-danger alert-dismissible fade show" role="alert" @(ViewBag.Message == null ? "style=display:none" : "")>
    @(ViewBag.Message != null ? ViewBag.Message : "")
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<br />

<div class="row">
    <div class="col-lg-6 col-sm-12">
        <form asp-action="Crear" asp-controller="CuentaAhorro" method="post">
            @Html.HiddenFor(x => x.Cliente.IdCliente)
            @Html.HiddenFor(x => x.Cliente.Nombre)
            @Html.HiddenFor(x => x.Cliente.ApellidoPaterno)
            @Html.HiddenFor(x => x.Cliente.ApellidoMaterno)
            @Html.HiddenFor(x => x.Cliente.NumeroCliente)
            <div class="form-group">
                @Html.LabelFor(x => x.NumeroCuenta)
                @Html.TextBoxFor(x => x.NumeroCuenta, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.NumeroCuenta)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.SaldoActual)
                @Html.TextBoxFor(x => x.SaldoActual, htmlAttributes: new { @class = "form-control", @type = "number", @step = "0.01" })
                @Html.ValidationMessageFor(x => x.SaldoActual)
            </div>
            <button type="submit" class="btn btn-success">Guardar</button>
        </form>
    </div>
</div>
